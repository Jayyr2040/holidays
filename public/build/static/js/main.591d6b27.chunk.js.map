{"version":3,"sources":["NewForm.js","App.js","reportWebVitals.js","index.js"],"names":["NewForm","props","onSubmit","event","preventDefault","fetch","method","body","JSON","stringify","name","target","value","headers","then","res","json","resJson","handleAddHoliday","catch","error","console","Error","htmlFor","type","id","placeholder","App","useState","holidays","setHolidays","useEffect","data","err","log","parsedData","className","holiday","style","border","map","likes","description","_id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAiCeA,EAjCC,SAACC,GAiBb,OACA,8BACI,uBAAMC,SAlBW,SAACC,GAClBA,EAAMC,iBACNC,MAAM,YAAa,CACjBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,KAAMP,EAAMQ,OAAOD,KAAKE,QAC/CC,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLhB,EAAMiB,iBAAiBD,MAExBE,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAM,CAAEE,MAAOF,QAK3C,UACA,uBAAOG,QAAQ,OAAf,sBACA,uBACIC,KAAK,OACLC,GAAG,OACHf,KAAK,OACLgB,YAAY,kBAEhB,uBAAOF,KAAK,SAASZ,MAAM,oCC6BpBe,MAlDf,WAEE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBA,OAbAC,qBAAU,WACR1B,MAAM,aACHS,MACC,SAACkB,GAAD,OAAUA,EAAKhB,UACf,SAACiB,GAAD,OAASZ,QAAQa,IAAID,MAEtBnB,MACC,SAACqB,GAAD,OAAgBL,EAAYK,MAC5B,SAACF,GAAD,OAASZ,QAAQa,IAAID,QAGxB,IAGD,sBAAKG,UAAU,MAAf,UACG,sDACA,cAAC,EAAD,CAASlB,iBApBK,SAACmB,GAClBP,EAAY,GAAD,mBAAKD,GAAL,CAAeQ,QAsBtB,uBAAOC,MAAO,CAACC,OAAO,aAAtB,SACI,kCACQ,+BACI,yCACA,wCACA,iDAECV,EAASW,KAAI,SAACH,GACf,OACI,+BACA,mCAAMA,EAAQ3B,QACd,mCAAM2B,EAAQI,SACd,mCAAMJ,EAAQK,iBAHLL,EAAQM,iBC9B9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.591d6b27.chunk.js","sourcesContent":["const NewForm = (props) => {\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        fetch(\"/holidays\", {\n          method: \"POST\",\n          body: JSON.stringify({ name: event.target.name.value }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n          .then((res) => res.json())\n          .then((resJson) => {\n            props.handleAddHoliday(resJson);\n          })\n          .catch((error) => console.error({ Error: error }));\n      }\n\n    return (    \n    <div>\n        <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Holiday:</label>\n        <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"add a holiday\"\n        />\n        <input type=\"submit\" value=\"Add a Reason to Celebrate\" />\n        </form>\n    </div>\n    )\n}\n\nexport default NewForm;","import * as React from 'react';\nimport './App.css';\n// import Holidays from './Holidays'\nimport NewForm from './NewForm.js'\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n \n  const [holidays, setHolidays] = useState([]);\n\n  const addHoliday = (holiday) => {\n    setHolidays([...holidays, holiday]);\n  };\n\n  useEffect(() => {\n    fetch(\"/holidays\")\n      .then(\n        (data) => data.json(),\n        (err) => console.log(err)\n      )\n      .then(\n        (parsedData) => setHolidays(parsedData),\n        (err) => console.log(err)\n\n      );\n  }, []);\n\n  return (\n    <div className=\"App\">\n       <h1>Holidays! Celebrate!</h1>\n       <NewForm handleAddHoliday={addHoliday}/>\n        {/* <Holidays handleSetHoliday={setHoliday}/>  */}\n     \n        <table style={{border:\"1px solid\"}}>\n            <tbody>\n                    <tr>\n                        <th> Title </th>\n                        <th> Likes</th>\n                        <th>Description </th>\n                    </tr>\n                        {holidays.map((holiday) => {\n                        return (\n                            <tr key={holiday._id}>\n                            <td> {holiday.name}</td>\n                            <td> {holiday.likes}</td>\n                            <td> {holiday.description}</td>\n                            </tr>\n                        );\n                        })}\n                    </tbody>\n            </table>\n          \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}